<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zh.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.zh.model.User">
        <id column="userId" jdbcType="INTEGER" property="userid"/>
        <result column="userName" jdbcType="VARCHAR" property="username"/>
        <result column="userPassword" jdbcType="VARCHAR" property="userpassword"/>
        <result column="isAdmin" jdbcType="TINYINT" property="isadmin"/>
    </resultMap>
    <sql id="Base_Column_List">
        userId, userName, userPassword, isAdmin
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from book_manager.user
        where userId = #{userid,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.zh.model.User">
        insert into book_manager.user (userId, userName, userPassword,
                                       isAdmin)
        values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR},
                #{isadmin,jdbcType=TINYINT})
    </insert>

    <insert id="insertSelective" parameterType="com.zh.model.User">
        insert into book_manager.user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">userId,</if>
            <if test="username != null">userName,</if>
            <if test="userpassword != null">userPassword,</if>
            <if test="isadmin != null">isAdmin,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">#{userid,jdbcType=INTEGER},</if>
            <if test="username != null">#{username,jdbcType=VARCHAR},</if>
            <if test="userpassword != null">#{userpassword,jdbcType=VARCHAR},</if>
            <if test="isadmin != null">#{isadmin,jdbcType=TINYINT},</if>
        </trim>
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_manager.user
        where userId = #{userid,jdbcType=INTEGER}
    </select>

    <update id="updateByPrimaryKeySelective" parameterType="com.zh.model.User">
        update book_manager.user
        <set>
            <if test="username != null">userName = #{username,jdbcType=VARCHAR},</if>
            <if test="userpassword != null">userPassword = #{userpassword,jdbcType=VARCHAR},</if>
            <if test="isadmin != null">isAdmin = #{isadmin,jdbcType=TINYINT},</if>
        </set>
        where userId = #{userid,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.zh.model.User">
        update book_manager.user
        set userName     = #{username,jdbcType=VARCHAR},
            userPassword = #{userpassword,jdbcType=VARCHAR},
            isAdmin      = #{isadmin,jdbcType=TINYINT}
        where userId = #{userid,jdbcType=INTEGER}
    </update>

    <select id="selectByUsernameAndPasswordAndIsAdmin" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_manager.user
        where userName = #{username}
        and userPassword = #{password}
        and isAdmin = #{isAdmin}
        limit 1
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_manager.user
        where userName = #{username}
        limit 1
    </select>

    <select id="selectAllByLimit" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_manager.user
        limit #{begin}, #{size}
    </select>

    <select id="selectCount" resultType="int">
        select count(*)
        from book_manager.user
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_manager.user
    </select>

    <select id="selectCountBySearch" resultType="int">
        select count(*) from book_manager.user
        <where>
            <if test="username != null and username != '' ">
                and userName like concat('%',#{username},'%')
            </if>
        </where>
    </select>

    <select id="selectBySearch" resultMap="BaseResultMap">
        select userId, userName, userPassword, isAdmin
        from book_manager.user
        <where>
            <if test="username != null and username != '' ">
                and userName like concat('%',#{username},'%')
            </if>
        </where>
        limit #{begin}, #{size}
    </select>

</mapper>
